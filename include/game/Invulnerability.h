#ifndef __INVULNERABILITY__
#define __INVULNERABILITY__

#include "WorldComponent.h"
#include "SpriteRenderer.h"

struct Invulnerability : public WorldComponent
{
public:
  Invulnerability(GameObject &associatedObject);
  virtual ~Invulnerability() {}

  // Applies invulnerability for the given duration
  void SetInvulnerable(float seconds);

  // Gets if invulnerability is currently on
  bool IsInvulnerable() const;

  // Disable invulnerability if it's enabled
  void WearOff();

  void Awake() override;
  void Update(float) override;

private:
  // Whether is currently invulnerable
  bool invulnerable{false};

  // Whether sprite renderer alpha is increasing or decreasing
  float alphaDirection{-1};

  // Last total duration set
  float lastTotalDuration{1};

  std::weak_ptr<SpriteRenderer> weakSpriteRenderer;
};

#endif